// –£–ª—É—á—à–µ–Ω–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
class PageNavigation {
	constructor() {
		this.links = []
		this.sections = []
		this.isScrolling = false
		this.scrollTimeout = null

		this.init()
	}

	init() {
		// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ DOM
		setTimeout(() => {
			this.updateElements()
			this.bindEvents()
			this.updateActiveLink()
		}, 100)
	}

	updateElements() {
		// –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏
		this.links = Array.from(document.querySelectorAll('.nav-link'))

		// –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Å–µ–∫—Ü–∏–∏ —Å ID
		this.sections = Array.from(
			document.querySelectorAll('div[id], section[id]')
		)

		// –§–∏–ª—å—Ç—Ä—É–µ–º —Å–µ–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–º–µ—é—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Å—Å—ã–ª–∫–∏
		this.sections = this.sections.filter(section => {
			return this.links.some(link => {
				const href = link.getAttribute('href')
				return href && href === `#${section.id}`
			})
		})

		console.log(
			`üìç –ù–∞–π–¥–µ–Ω–æ ${this.links.length} —Å—Å—ã–ª–æ–∫ –∏ ${this.sections.length} —Å–µ–∫—Ü–∏–π`
		)
	}

	bindEvents() {
		// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —Å—Å—ã–ª–∫–∞–º
		this.links.forEach(link => {
			link.addEventListener('click', event => {
				event.preventDefault()
				this.handleLinkClick(link)
			})
		})

		// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∫—Ä–æ–ª–ª–∞ —Å —Ç—Ä–æ—Ç—Ç–ª–∏–Ω–≥–æ–º
		window.addEventListener(
			'scroll',
			() => {
				this.handleScroll()
			},
			{ passive: true }
		)

		// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
		window.addEventListener(
			'resize',
			() => {
				clearTimeout(this.scrollTimeout)
				this.scrollTimeout = setTimeout(() => {
					this.updateActiveLink()
				}, 250)
			},
			{ passive: true }
		)

		// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –≤—ã—Å–æ—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
		window.addEventListener('load', () => {
			setTimeout(() => {
				this.updateActiveLink()
			}, 500)
		})
	}

	handleLinkClick(link) {
		const href = link.getAttribute('href')
		if (!href || !href.startsWith('#')) {
			console.warn('–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞:', href)
			return
		}

		const targetId = href.substring(1)
		const target = document.getElementById(targetId)

		if (!target) {
			console.warn('–°–µ–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:', targetId)
			return
		}

		// –ü–æ–º–µ—á–∞–µ–º, —á—Ç–æ –∏–¥–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π —Å–∫—Ä–æ–ª–ª
		this.isScrolling = true

		// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å—Å—ã–ª–∫—É —Å—Ä–∞–∑—É
		this.setActiveLink(link)

		// –í—ã—á–∏—Å–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é —Å —É—á–µ—Ç–æ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ö–µ–¥–µ—Ä–∞
		const headerHeight = this.getHeaderHeight()
		const targetPosition = target.offsetTop - headerHeight - 20

		// –ü–ª–∞–≤–Ω—ã–π —Å–∫—Ä–æ–ª–ª
		window.scrollTo({
			top: Math.max(0, targetPosition),
			behavior: 'smooth',
		})

		// –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
		clearTimeout(this.scrollTimeout)
		this.scrollTimeout = setTimeout(() => {
			this.isScrolling = false
			this.updateActiveLink()
		}, 1000)
	}

	handleScroll() {
		// –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª –≤–æ –≤—Ä–µ–º—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
		if (this.isScrolling) return

		// –î–µ–±–∞—É–Ω—Å –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
		clearTimeout(this.scrollTimeout)
		this.scrollTimeout = setTimeout(() => {
			this.updateActiveLink()
		}, 50)
	}

	updateActiveLink() {
		if (this.sections.length === 0 || this.links.length === 0) {
			return
		}

		const scrollPosition = window.scrollY
		const windowHeight = window.innerHeight
		const documentHeight = document.documentElement.scrollHeight
		const headerHeight = this.getHeaderHeight()

		// –ï—Å–ª–∏ —Å–∫—Ä–æ–ª–ª–∏–ª–∏ –¥–æ —Å–∞–º–æ–≥–æ –Ω–∏–∑–∞, –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–µ–∫—Ü–∏—é
		if (scrollPosition + windowHeight >= documentHeight - 10) {
			const lastLink = this.getLastValidLink()
			if (lastLink) {
				this.setActiveLink(lastLink)
				return
			}
		}

		// –ï—Å–ª–∏ –≤ —Å–∞–º–æ–º –≤–µ—Ä—Ö—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–µ—Ä–≤—É—é —Å–µ–∫—Ü–∏—é
		if (scrollPosition <= 50) {
			const firstLink = this.getFirstValidLink()
			if (firstLink) {
				this.setActiveLink(firstLink)
				return
			}
		}

		// –ù–∞—Ö–æ–¥–∏–º —Ç–µ–∫—É—â—É—é –≤–∏–¥–∏–º—É—é —Å–µ–∫—Ü–∏—é
		let activeSection = null
		let closestDistance = Infinity

		this.sections.forEach(section => {
			const rect = section.getBoundingClientRect()
			const sectionTop = rect.top + scrollPosition
			const sectionBottom = sectionTop + rect.height

			// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∏–¥–Ω–∞ –ª–∏ —Å–µ–∫—Ü–∏—è
			const viewportTop = scrollPosition + headerHeight + 100
			const viewportBottom = scrollPosition + windowHeight - 100

			const isVisible =
				sectionTop < viewportBottom && sectionBottom > viewportTop

			if (isVisible) {
				// –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç —Ü–µ–Ω—Ç—Ä–∞ viewport –¥–æ —Å–µ–∫—Ü–∏–∏
				const viewportCenter = (viewportTop + viewportBottom) / 2
				const sectionCenter = (sectionTop + sectionBottom) / 2
				const distance = Math.abs(viewportCenter - sectionCenter)

				if (distance < closestDistance) {
					closestDistance = distance
					activeSection = section
				}
			}
		})

		if (activeSection) {
			const activeLink = this.findLinkForSection(activeSection)
			if (activeLink) {
				this.setActiveLink(activeLink)
			}
		}
	}

	setActiveLink(activeLink) {
		// –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö —Å—Å—ã–ª–æ–∫
		this.links.forEach(link => {
			link.classList.remove('active')
		})

		// –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ
		if (activeLink) {
			activeLink.classList.add('active')

			// –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –∫ –∞–∫—Ç–∏–≤–Ω–æ–π —Å—Å—ã–ª–∫–µ
			this.scrollNavToActiveLink(activeLink)
		}
	}

	findLinkForSection(section) {
		return this.links.find(link => {
			const href = link.getAttribute('href')
			return href === `#${section.id}`
		})
	}

	getFirstValidLink() {
		return this.links.find(link => {
			const href = link.getAttribute('href')
			return href && href.startsWith('#') && document.querySelector(href)
		})
	}

	getLastValidLink() {
		const validLinks = this.links.filter(link => {
			const href = link.getAttribute('href')
			return href && href.startsWith('#') && document.querySelector(href)
		})
		return validLinks[validLinks.length - 1]
	}

	getHeaderHeight() {
		const header = document.querySelector('header, .header, .navbar')
		return header ? header.offsetHeight : 0
	}

	scrollNavToActiveLink(activeLink) {
		// –ï—Å–ª–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–∫—Ä–æ–ª–ª–∏—Ä—É–µ–º–æ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
		const navContainer = activeLink.closest('.scrollable-nav, .sidebar')
		if (navContainer) {
			const linkRect = activeLink.getBoundingClientRect()
			const containerRect = navContainer.getBoundingClientRect()

			if (
				linkRect.top < containerRect.top ||
				linkRect.bottom > containerRect.bottom
			) {
				activeLink.scrollIntoView({
					behavior: 'smooth',
					block: 'center',
				})
			}
		}
	}

	// –ü—É–±–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
	refresh() {
		this.updateElements()
		this.updateActiveLink()
	}

	goToSection(sectionId) {
		const link = this.links.find(
			link => link.getAttribute('href') === `#${sectionId}`
		)
		if (link) {
			this.handleLinkClick(link)
		} else {
			console.warn('–°—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è —Å–µ–∫—Ü–∏–∏:', sectionId)
		}
	}

	getCurrentSection() {
		const activeLink = this.links.find(link =>
			link.classList.contains('active')
		)
		if (activeLink) {
			const href = activeLink.getAttribute('href')
			return href ? href.substring(1) : null
		}
		return null
	}
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
let pageNavigation = null

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', function () {
	pageNavigation = new PageNavigation()

	// –î–µ–ª–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–º –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∏ –≤–Ω–µ—à–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
	window.pageNavigation = pageNavigation
})

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('load', function () {
	if (pageNavigation) {
		// –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
		setTimeout(() => {
			pageNavigation.refresh()
		}, 500)
	}
})

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –º–æ–¥—É–ª—å–Ω—ã—Ö —Å–∏—Å—Ç–µ–º (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
if (typeof module !== 'undefined' && module.exports) {
	module.exports = PageNavigation
}
